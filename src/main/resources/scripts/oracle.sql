CREATE TABLE SPRING_SESSION (
	PRIMARY_ID CHAR(36) NOT NULL,
	SESSION_ID CHAR(36) NOT NULL,
	CREATION_TIME NUMBER(19,0) NOT NULL,
	LAST_ACCESS_TIME NUMBER(19,0) NOT NULL,
	MAX_INACTIVE_INTERVAL NUMBER(10,0) NOT NULL,
	EXPIRY_TIME NUMBER(19,0) NOT NULL,
	PRINCIPAL_NAME VARCHAR2(100 CHAR),
	CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)
);

CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);
CREATE INDEX SPRING_SESSION_IX2 ON SPRING_SESSION (EXPIRY_TIME);
CREATE INDEX SPRING_SESSION_IX3 ON SPRING_SESSION (PRINCIPAL_NAME);

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
	SESSION_PRIMARY_ID CHAR(36) NOT NULL,
	ATTRIBUTE_NAME VARCHAR2(200 CHAR) NOT NULL,
	ATTRIBUTE_BYTES BLOB NOT NULL,
	CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),
	CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES SPRING_SESSION(PRIMARY_ID) ON DELETE CASCADE
);


-- STUDENT TABLE
CREATE TABLE STUDENT (
STU_KEY NUMERIC (10),
FIRST_NAME VARCHAR2(100),
LAST_NAME VARCHAR2(100),
ROLL_NO VARCHAR2(10),
CONSTRAINT STU_PK PRIMARY KEY  (STU_KEY)
);

CREATE SEQUENCE  STU_SEQ  MINVALUE 1 MAXVALUE 9999999999999999 INCREMENT BY 1 START WITH 2960 NOCACHE  ORDER  NOCYCLE ;

CREATE OR REPLACE TRIGGER STU_SEQ_TRG BEFORE
    INSERT ON STUDENT
    FOR EACH ROW
     WHEN ( new.STU_KEY IS NULL ) BEGIN
    :new.STU_KEY := STU_SEQ.nextval;
END;
/
ALTER TRIGGER STU_SEQ_TRG ENABLE;